(declare-const Md0 Int)
(assert (>= Md0 0))
(declare-const Md1 Int)
(assert (>= Md1 0))
(declare-const Md2 Int)
(assert (>= Md2 0))
(declare-const Md3 Int)
(assert (>= Md3 0))
(declare-const Md4 Int)
(assert (>= Md4 0))

(declare-const Md0d0 Int)
(assert (>= Md0d0 0))
(declare-const Md0d1 Int)
(assert (>= Md0d1 0))
(declare-const Md0d2 Int)
(assert (>= Md0d2 0))
(declare-const Md0d3 Int)
(assert (>= Md0d3 0))
(declare-const Md0d4 Int)
(assert (>= Md0d4 0))
(declare-const Md1d0 Int)
(assert (>= Md1d0 0))
(declare-const Md1d1 Int)
(assert (>= Md1d1 0))
(declare-const Md1d2 Int)
(assert (>= Md1d2 0))
(declare-const Md1d3 Int)
(assert (>= Md1d3 0))
(declare-const Md1d4 Int)
(assert (>= Md1d4 0))
(declare-const Md2d0 Int)
(assert (>= Md2d0 0))
(declare-const Md2d1 Int)
(assert (>= Md2d1 0))
(declare-const Md2d2 Int)
(assert (>= Md2d2 0))
(declare-const Md2d3 Int)
(assert (>= Md2d3 0))
(declare-const Md2d4 Int)
(assert (>= Md2d4 0))
(declare-const Md3d0 Int)
(assert (>= Md3d0 0))
(declare-const Md3d1 Int)
(assert (>= Md3d1 0))
(declare-const Md3d2 Int)
(assert (>= Md3d2 0))
(declare-const Md3d3 Int)
(assert (>= Md3d3 0))
(declare-const Md3d4 Int)
(assert (>= Md3d4 0))
(declare-const Md4d0 Int)
(assert (>= Md4d0 0))
(declare-const Md4d1 Int)
(assert (>= Md4d1 0))
(declare-const Md4d2 Int)
(assert (>= Md4d2 0))
(declare-const Md4d3 Int)
(assert (>= Md4d3 0))
(declare-const Md4d4 Int)
(assert (>= Md4d4 0))

(declare-const MMd0d0 Int)
(assert (>= MMd0d0 0))
(declare-const MMd0d1 Int)
(assert (>= MMd0d1 0))
(declare-const MMd0d2 Int)
(assert (>= MMd0d2 0))
(declare-const MMd0d3 Int)
(assert (>= MMd0d3 0))
(declare-const MMd0d4 Int)
(assert (>= MMd0d4 0))
(declare-const MMd1d0 Int)
(assert (>= MMd1d0 0))
(declare-const MMd1d1 Int)
(assert (>= MMd1d1 0))
(declare-const MMd1d2 Int)
(assert (>= MMd1d2 0))
(declare-const MMd1d3 Int)
(assert (>= MMd1d3 0))
(declare-const MMd1d4 Int)
(assert (>= MMd1d4 0))
(declare-const MMd2d0 Int)
(assert (>= MMd2d0 0))
(declare-const MMd2d1 Int)
(assert (>= MMd2d1 0))
(declare-const MMd2d2 Int)
(assert (>= MMd2d2 0))
(declare-const MMd2d3 Int)
(assert (>= MMd2d3 0))
(declare-const MMd2d4 Int)
(assert (>= MMd2d4 0))
(declare-const MMd3d0 Int)
(assert (>= MMd3d0 0))
(declare-const MMd3d1 Int)
(assert (>= MMd3d1 0))
(declare-const MMd3d2 Int)
(assert (>= MMd3d2 0))
(declare-const MMd3d3 Int)
(assert (>= MMd3d3 0))
(declare-const MMd3d4 Int)
(assert (>= MMd3d4 0))
(declare-const MMd4d0 Int)
(assert (>= MMd4d0 0))
(declare-const MMd4d1 Int)
(assert (>= MMd4d1 0))
(declare-const MMd4d2 Int)
(assert (>= MMd4d2 0))
(declare-const MMd4d3 Int)
(assert (>= MMd4d3 0))
(declare-const MMd4d4 Int)
(assert (>= MMd4d4 0))

(assert (= Md0d0 MMd0d0))
(assert (= Md0d1 MMd0d1))
(assert (= Md0d2 MMd0d2))
(assert (= Md0d3 MMd0d3))
(assert (= Md0d4 MMd0d4))
(assert (= Md1d0 MMd1d0))
(assert (= Md1d1 MMd1d1))
(assert (= Md1d2 MMd1d2))
(assert (= Md1d3 MMd1d3))
(assert (= Md1d4 MMd1d4))
(assert (= Md2d0 MMd2d0))
(assert (= Md2d1 MMd2d1))
(assert (= Md2d2 MMd2d2))
(assert (= Md2d3 MMd2d3))
(assert (= Md2d4 MMd2d4))
(assert (= Md3d0 MMd3d0))
(assert (= Md3d1 MMd3d1))
(assert (= Md3d2 MMd3d2))
(assert (= Md3d3 MMd3d3))
(assert (= Md3d4 MMd3d4))
(assert (= Md4d0 MMd4d0))
(assert (= Md4d1 MMd4d1))
(assert (= Md4d2 MMd4d2))
(assert (= Md4d3 MMd4d3))
(assert (= Md4d4 MMd4d4))

(declare-const IsLast_d0 Int)
(assert (>= IsLast_d0 0))
(declare-const IsLast_d1 Int)
(assert (>= IsLast_d1 0))
(declare-const IsLast_d2 Int)
(assert (>= IsLast_d2 0))
(declare-const IsLast_d3 Int)
(assert (>= IsLast_d3 0))
(declare-const IsLast_d4 Int)
(assert (>= IsLast_d4 0))
(assert (= (+ IsLast_d0 IsLast_d1 IsLast_d2 IsLast_d3 IsLast_d4) 1))

(declare-const IsFirst_d0 Int)
(assert (>= IsFirst_d0 0))
(declare-const IsFirst_d1 Int)
(assert (>= IsFirst_d1 0))
(declare-const IsFirst_d2 Int)
(assert (>= IsFirst_d2 0))
(declare-const IsFirst_d3 Int)
(assert (>= IsFirst_d3 0))
(declare-const IsFirst_d4 Int)
(assert (>= IsFirst_d4 0))
(assert (= (+ IsFirst_d0 IsFirst_d1 IsFirst_d2 IsFirst_d3 IsFirst_d4) 1))

(assert(=(+ Md0d0 Md0d1 Md0d2 Md0d3 Md0d4)(- Md0 IsLast_d0)))
(assert(=(+ Md1d0 Md1d1 Md1d2 Md1d3 Md1d4)(- Md1 IsLast_d1)))
(assert(=(+ Md2d0 Md2d1 Md2d2 Md2d3 Md2d4)(- Md2 IsLast_d2)))
(assert(=(+ Md3d0 Md3d1 Md3d2 Md3d3 Md3d4)(- Md3 IsLast_d3)))
(assert(=(+ Md4d0 Md4d1 Md4d2 Md4d3 Md4d4)(- Md4 IsLast_d4)))

(assert(=(+ MMd0d0 MMd0d1 MMd0d2 MMd0d3 MMd0d4)(- Md0 IsFirst_d0)))
(assert(=(+ MMd1d0 MMd1d1 MMd1d2 MMd1d3 MMd1d4)(- Md1 IsFirst_d1)))
(assert(=(+ MMd2d0 MMd2d1 MMd2d2 MMd2d3 MMd2d4)(- Md2 IsFirst_d2)))
(assert(=(+ MMd3d0 MMd3d1 MMd3d2 MMd3d3 MMd3d4)(- Md3 IsFirst_d3)))
(assert(=(+ MMd4d0 MMd4d1 MMd4d2 MMd4d3 MMd4d4)(- Md4 IsFirst_d4)))

(assert (= Md0 (ite (or (and (= (* IsFirst_d1 IsLast_d1) 1) (= Md1 1)) (and (= (* IsFirst_d2 IsLast_d2) 1) (= Md2 1)) (and (= (* IsFirst_d3 IsLast_d3) 1) (= Md3 1)) (and (= (* IsFirst_d4 IsLast_d4) 1) (= Md4 1))) 0 Md0) ))
(assert (= Md1 (ite (or (and (= (* IsFirst_d0 IsLast_d0) 1) (= Md0 1)) (and (= (* IsFirst_d2 IsLast_d2) 1) (= Md2 1)) (and (= (* IsFirst_d3 IsLast_d3) 1) (= Md3 1)) (and (= (* IsFirst_d4 IsLast_d4) 1) (= Md4 1))) 0 Md1) ))
(assert (= Md2 (ite (or (and (= (* IsFirst_d0 IsLast_d0) 1) (= Md0 1)) (and (= (* IsFirst_d1 IsLast_d1) 1) (= Md1 1)) (and (= (* IsFirst_d3 IsLast_d3) 1) (= Md3 1)) (and (= (* IsFirst_d4 IsLast_d4) 1) (= Md4 1))) 0 Md2) ))
(assert (= Md3 (ite (or (and (= (* IsFirst_d0 IsLast_d0) 1) (= Md0 1)) (and (= (* IsFirst_d1 IsLast_d1) 1) (= Md1 1)) (and (= (* IsFirst_d2 IsLast_d2) 1) (= Md2 1)) (and (= (* IsFirst_d4 IsLast_d4) 1) (= Md4 1))) 0 Md3) ))
(assert (= Md4 (ite (or (and (= (* IsFirst_d0 IsLast_d0) 1) (= Md0 1)) (and (= (* IsFirst_d1 IsLast_d1) 1) (= Md1 1)) (and (= (* IsFirst_d2 IsLast_d2) 1) (= Md2 1)) (and (= (* IsFirst_d3 IsLast_d3) 1) (= Md3 1))) 0 Md4) ))

(assert (< Md0d0 Md0))
(assert (< Md1d1 Md1))
(assert (< Md2d2 Md2))
(assert (< Md3d3 Md3))
(assert (< Md4d4 Md4))

(declare-const Lu_ad0 Int)
(assert (= Lu_ad0 1))
(declare-const Ld_ad0 Int)
(assert (= Ld_ad0 1))
(declare-const Lu_bd0 Int)
(assert (= Lu_bd0 0))
(declare-const Ld_bd0 Int)
(assert (= Ld_bd0 1))
(declare-const Lu_ad1 Int)
(assert (= Lu_ad1 0))
(declare-const Ld_ad1 Int)
(assert (= Ld_ad1 1))
(declare-const Lu_bd1 Int)
(assert (= Lu_bd1 1))
(declare-const Ld_bd1 Int)
(assert (= Ld_bd1 0))
(declare-const Lu_ad2 Int)
(assert (= Lu_ad2 1))
(declare-const Ld_ad2 Int)
(assert (= Ld_ad2 0))
(declare-const Lu_bd2 Int)
(assert (= Lu_bd2 0))
(declare-const Ld_bd2 Int)
(assert (= Ld_bd2 1))
(declare-const Lu_ad3 Int)
(assert (= Lu_ad3 1))
(declare-const Ld_ad3 Int)
(assert (= Ld_ad3 0))
(declare-const Lu_bd3 Int)
(assert (= Lu_bd3 1))
(declare-const Ld_bd3 Int)
(assert (= Ld_bd3 1))
(declare-const Lu_ad4 Int)
(assert (= Lu_ad4 0))
(declare-const Ld_ad4 Int)
(assert (= Ld_ad4 0))
(declare-const Lu_bd4 Int)
(assert (= Lu_bd4 1))
(declare-const Ld_bd4 Int)
(assert (= Ld_bd4 1))

(declare-const Pu_aad0 Int)
(assert (= Pu_aad0 0))
(declare-const Pd_aad0 Int)
(assert (= Pd_aad0 0))
(declare-const Pu_abd0 Int)
(assert (= Pu_abd0 0))
(declare-const Pd_abd0 Int)
(assert (= Pd_abd0 0))
(declare-const Pu_bad0 Int)
(assert (= Pu_bad0 0))
(declare-const Pd_bad0 Int)
(assert (= Pd_bad0 1))
(declare-const Pu_bbd0 Int)
(assert (= Pu_bbd0 0))
(declare-const Pd_bbd0 Int)
(assert (= Pd_bbd0 0))
(declare-const Pu_aad1 Int)
(assert (= Pu_aad1 0))
(declare-const Pd_aad1 Int)
(assert (= Pd_aad1 0))
(declare-const Pu_abd1 Int)
(assert (= Pu_abd1 0))
(declare-const Pd_abd1 Int)
(assert (= Pd_abd1 0))
(declare-const Pu_bad1 Int)
(assert (= Pu_bad1 0))
(declare-const Pd_bad1 Int)
(assert (= Pd_bad1 0))
(declare-const Pu_bbd1 Int)
(assert (= Pu_bbd1 0))
(declare-const Pd_bbd1 Int)
(assert (= Pd_bbd1 0))
(declare-const Pu_aad2 Int)
(assert (= Pu_aad2 0))
(declare-const Pd_aad2 Int)
(assert (= Pd_aad2 0))
(declare-const Pu_abd2 Int)
(assert (= Pu_abd2 0))
(declare-const Pd_abd2 Int)
(assert (= Pd_abd2 0))
(declare-const Pu_bad2 Int)
(assert (= Pu_bad2 0))
(declare-const Pd_bad2 Int)
(assert (= Pd_bad2 0))
(declare-const Pu_bbd2 Int)
(assert (= Pu_bbd2 0))
(declare-const Pd_bbd2 Int)
(assert (= Pd_bbd2 0))
(declare-const Pu_aad3 Int)
(assert (= Pu_aad3 0))
(declare-const Pd_aad3 Int)
(assert (= Pd_aad3 0))
(declare-const Pu_abd3 Int)
(assert (= Pu_abd3 1))
(declare-const Pd_abd3 Int)
(assert (= Pd_abd3 0))
(declare-const Pu_bad3 Int)
(assert (= Pu_bad3 0))
(declare-const Pd_bad3 Int)
(assert (= Pd_bad3 0))
(declare-const Pu_bbd3 Int)
(assert (= Pu_bbd3 0))
(declare-const Pd_bbd3 Int)
(assert (= Pd_bbd3 0))
(declare-const Pu_aad4 Int)
(assert (= Pu_aad4 0))
(declare-const Pd_aad4 Int)
(assert (= Pd_aad4 0))
(declare-const Pu_abd4 Int)
(assert (= Pu_abd4 0))
(declare-const Pd_abd4 Int)
(assert (= Pd_abd4 0))
(declare-const Pu_bad4 Int)
(assert (= Pu_bad4 0))
(declare-const Pd_bad4 Int)
(assert (= Pd_bad4 0))
(declare-const Pu_bbd4 Int)
(assert (= Pu_bbd4 0))
(declare-const Pd_bbd4 Int)
(assert (= Pd_bbd4 0))

(declare-const Pu_aad0d0 Int)
(assert (= Pu_aad0d0 1))
(declare-const Pd_aad0d0 Int)
(assert (= Pd_aad0d0 0))
(declare-const Pu_abd0d0 Int)
(assert (= Pu_abd0d0 0))
(declare-const Pd_abd0d0 Int)
(assert (= Pd_abd0d0 1))
(declare-const Pu_bad0d0 Int)
(assert (= Pu_bad0d0 0))
(declare-const Pd_bad0d0 Int)
(assert (= Pd_bad0d0 0))
(declare-const Pu_bbd0d0 Int)
(assert (= Pu_bbd0d0 0))
(declare-const Pd_bbd0d0 Int)
(assert (= Pd_bbd0d0 0))
(declare-const Pu_aad0d1 Int)
(assert (= Pu_aad0d1 0))
(declare-const Pd_aad0d1 Int)
(assert (= Pd_aad0d1 1))
(declare-const Pu_abd0d1 Int)
(assert (= Pu_abd0d1 1))
(declare-const Pd_abd0d1 Int)
(assert (= Pd_abd0d1 0))
(declare-const Pu_bad0d1 Int)
(assert (= Pu_bad0d1 0))
(declare-const Pd_bad0d1 Int)
(assert (= Pd_bad0d1 0))
(declare-const Pu_bbd0d1 Int)
(assert (= Pu_bbd0d1 0))
(declare-const Pd_bbd0d1 Int)
(assert (= Pd_bbd0d1 0))
(declare-const Pu_aad0d2 Int)
(assert (= Pu_aad0d2 1))
(declare-const Pd_aad0d2 Int)
(assert (= Pd_aad0d2 0))
(declare-const Pu_abd0d2 Int)
(assert (= Pu_abd0d2 0))
(declare-const Pd_abd0d2 Int)
(assert (= Pd_abd0d2 1))
(declare-const Pu_bad0d2 Int)
(assert (= Pu_bad0d2 0))
(declare-const Pd_bad0d2 Int)
(assert (= Pd_bad0d2 0))
(declare-const Pu_bbd0d2 Int)
(assert (= Pu_bbd0d2 0))
(declare-const Pd_bbd0d2 Int)
(assert (= Pd_bbd0d2 0))
(declare-const Pu_aad0d3 Int)
(assert (= Pu_aad0d3 1))
(declare-const Pd_aad0d3 Int)
(assert (= Pd_aad0d3 0))
(declare-const Pu_abd0d3 Int)
(assert (= Pu_abd0d3 0))
(declare-const Pd_abd0d3 Int)
(assert (= Pd_abd0d3 1))
(declare-const Pu_bad0d3 Int)
(assert (= Pu_bad0d3 0))
(declare-const Pd_bad0d3 Int)
(assert (= Pd_bad0d3 0))
(declare-const Pu_bbd0d3 Int)
(assert (= Pu_bbd0d3 0))
(declare-const Pd_bbd0d3 Int)
(assert (= Pd_bbd0d3 0))
(declare-const Pu_aad0d4 Int)
(assert (= Pu_aad0d4 0))
(declare-const Pd_aad0d4 Int)
(assert (= Pd_aad0d4 0))
(declare-const Pu_abd0d4 Int)
(assert (= Pu_abd0d4 1))
(declare-const Pd_abd0d4 Int)
(assert (= Pd_abd0d4 1))
(declare-const Pu_bad0d4 Int)
(assert (= Pu_bad0d4 0))
(declare-const Pd_bad0d4 Int)
(assert (= Pd_bad0d4 0))
(declare-const Pu_bbd0d4 Int)
(assert (= Pu_bbd0d4 0))
(declare-const Pd_bbd0d4 Int)
(assert (= Pd_bbd0d4 0))
(declare-const Pu_aad1d0 Int)
(assert (= Pu_aad1d0 0))
(declare-const Pd_aad1d0 Int)
(assert (= Pd_aad1d0 0))
(declare-const Pu_abd1d0 Int)
(assert (= Pu_abd1d0 0))
(declare-const Pd_abd1d0 Int)
(assert (= Pd_abd1d0 1))
(declare-const Pu_bad1d0 Int)
(assert (= Pu_bad1d0 1))
(declare-const Pd_bad1d0 Int)
(assert (= Pd_bad1d0 0))
(declare-const Pu_bbd1d0 Int)
(assert (= Pu_bbd1d0 0))
(declare-const Pd_bbd1d0 Int)
(assert (= Pd_bbd1d0 0))
(declare-const Pu_aad1d1 Int)
(assert (= Pu_aad1d1 0))
(declare-const Pd_aad1d1 Int)
(assert (= Pd_aad1d1 1))
(declare-const Pu_abd1d1 Int)
(assert (= Pu_abd1d1 0))
(declare-const Pd_abd1d1 Int)
(assert (= Pd_abd1d1 0))
(declare-const Pu_bad1d1 Int)
(assert (= Pu_bad1d1 0))
(declare-const Pd_bad1d1 Int)
(assert (= Pd_bad1d1 0))
(declare-const Pu_bbd1d1 Int)
(assert (= Pu_bbd1d1 1))
(declare-const Pd_bbd1d1 Int)
(assert (= Pd_bbd1d1 0))
(declare-const Pu_aad1d2 Int)
(assert (= Pu_aad1d2 0))
(declare-const Pd_aad1d2 Int)
(assert (= Pd_aad1d2 0))
(declare-const Pu_abd1d2 Int)
(assert (= Pu_abd1d2 0))
(declare-const Pd_abd1d2 Int)
(assert (= Pd_abd1d2 1))
(declare-const Pu_bad1d2 Int)
(assert (= Pu_bad1d2 1))
(declare-const Pd_bad1d2 Int)
(assert (= Pd_bad1d2 0))
(declare-const Pu_bbd1d2 Int)
(assert (= Pu_bbd1d2 0))
(declare-const Pd_bbd1d2 Int)
(assert (= Pd_bbd1d2 0))
(declare-const Pu_aad1d3 Int)
(assert (= Pu_aad1d3 0))
(declare-const Pd_aad1d3 Int)
(assert (= Pd_aad1d3 0))
(declare-const Pu_abd1d3 Int)
(assert (= Pu_abd1d3 0))
(declare-const Pd_abd1d3 Int)
(assert (= Pd_abd1d3 1))
(declare-const Pu_bad1d3 Int)
(assert (= Pu_bad1d3 1))
(declare-const Pd_bad1d3 Int)
(assert (= Pd_bad1d3 0))
(declare-const Pu_bbd1d3 Int)
(assert (= Pu_bbd1d3 0))
(declare-const Pd_bbd1d3 Int)
(assert (= Pd_bbd1d3 0))
(declare-const Pu_aad1d4 Int)
(assert (= Pu_aad1d4 0))
(declare-const Pd_aad1d4 Int)
(assert (= Pd_aad1d4 0))
(declare-const Pu_abd1d4 Int)
(assert (= Pu_abd1d4 0))
(declare-const Pd_abd1d4 Int)
(assert (= Pd_abd1d4 1))
(declare-const Pu_bad1d4 Int)
(assert (= Pu_bad1d4 0))
(declare-const Pd_bad1d4 Int)
(assert (= Pd_bad1d4 0))
(declare-const Pu_bbd1d4 Int)
(assert (= Pu_bbd1d4 1))
(declare-const Pd_bbd1d4 Int)
(assert (= Pd_bbd1d4 0))
(declare-const Pu_aad2d0 Int)
(assert (= Pu_aad2d0 1))
(declare-const Pd_aad2d0 Int)
(assert (= Pd_aad2d0 0))
(declare-const Pu_abd2d0 Int)
(assert (= Pu_abd2d0 0))
(declare-const Pd_abd2d0 Int)
(assert (= Pd_abd2d0 0))
(declare-const Pu_bad2d0 Int)
(assert (= Pu_bad2d0 0))
(declare-const Pd_bad2d0 Int)
(assert (= Pd_bad2d0 0))
(declare-const Pu_bbd2d0 Int)
(assert (= Pu_bbd2d0 0))
(declare-const Pd_bbd2d0 Int)
(assert (= Pd_bbd2d0 1))
(declare-const Pu_aad2d1 Int)
(assert (= Pu_aad2d1 0))
(declare-const Pd_aad2d1 Int)
(assert (= Pd_aad2d1 0))
(declare-const Pu_abd2d1 Int)
(assert (= Pu_abd2d1 1))
(declare-const Pd_abd2d1 Int)
(assert (= Pd_abd2d1 0))
(declare-const Pu_bad2d1 Int)
(assert (= Pu_bad2d1 0))
(declare-const Pd_bad2d1 Int)
(assert (= Pd_bad2d1 1))
(declare-const Pu_bbd2d1 Int)
(assert (= Pu_bbd2d1 0))
(declare-const Pd_bbd2d1 Int)
(assert (= Pd_bbd2d1 0))
(declare-const Pu_aad2d2 Int)
(assert (= Pu_aad2d2 1))
(declare-const Pd_aad2d2 Int)
(assert (= Pd_aad2d2 0))
(declare-const Pu_abd2d2 Int)
(assert (= Pu_abd2d2 0))
(declare-const Pd_abd2d2 Int)
(assert (= Pd_abd2d2 0))
(declare-const Pu_bad2d2 Int)
(assert (= Pu_bad2d2 0))
(declare-const Pd_bad2d2 Int)
(assert (= Pd_bad2d2 0))
(declare-const Pu_bbd2d2 Int)
(assert (= Pu_bbd2d2 0))
(declare-const Pd_bbd2d2 Int)
(assert (= Pd_bbd2d2 1))
(declare-const Pu_aad2d3 Int)
(assert (= Pu_aad2d3 1))
(declare-const Pd_aad2d3 Int)
(assert (= Pd_aad2d3 0))
(declare-const Pu_abd2d3 Int)
(assert (= Pu_abd2d3 0))
(declare-const Pd_abd2d3 Int)
(assert (= Pd_abd2d3 0))
(declare-const Pu_bad2d3 Int)
(assert (= Pu_bad2d3 0))
(declare-const Pd_bad2d3 Int)
(assert (= Pd_bad2d3 0))
(declare-const Pu_bbd2d3 Int)
(assert (= Pu_bbd2d3 0))
(declare-const Pd_bbd2d3 Int)
(assert (= Pd_bbd2d3 1))
(declare-const Pu_aad2d4 Int)
(assert (= Pu_aad2d4 0))
(declare-const Pd_aad2d4 Int)
(assert (= Pd_aad2d4 0))
(declare-const Pu_abd2d4 Int)
(assert (= Pu_abd2d4 1))
(declare-const Pd_abd2d4 Int)
(assert (= Pd_abd2d4 0))
(declare-const Pu_bad2d4 Int)
(assert (= Pu_bad2d4 0))
(declare-const Pd_bad2d4 Int)
(assert (= Pd_bad2d4 0))
(declare-const Pu_bbd2d4 Int)
(assert (= Pu_bbd2d4 0))
(declare-const Pd_bbd2d4 Int)
(assert (= Pd_bbd2d4 1))
(declare-const Pu_aad3d0 Int)
(assert (= Pu_aad3d0 0))
(declare-const Pd_aad3d0 Int)
(assert (= Pd_aad3d0 0))
(declare-const Pu_abd3d0 Int)
(assert (= Pu_abd3d0 0))
(declare-const Pd_abd3d0 Int)
(assert (= Pd_abd3d0 0))
(declare-const Pu_bad3d0 Int)
(assert (= Pu_bad3d0 1))
(declare-const Pd_bad3d0 Int)
(assert (= Pd_bad3d0 0))
(declare-const Pu_bbd3d0 Int)
(assert (= Pu_bbd3d0 0))
(declare-const Pd_bbd3d0 Int)
(assert (= Pd_bbd3d0 1))
(declare-const Pu_aad3d1 Int)
(assert (= Pu_aad3d1 0))
(declare-const Pd_aad3d1 Int)
(assert (= Pd_aad3d1 0))
(declare-const Pu_abd3d1 Int)
(assert (= Pu_abd3d1 0))
(declare-const Pd_abd3d1 Int)
(assert (= Pd_abd3d1 0))
(declare-const Pu_bad3d1 Int)
(assert (= Pu_bad3d1 0))
(declare-const Pd_bad3d1 Int)
(assert (= Pd_bad3d1 1))
(declare-const Pu_bbd3d1 Int)
(assert (= Pu_bbd3d1 1))
(declare-const Pd_bbd3d1 Int)
(assert (= Pd_bbd3d1 0))
(declare-const Pu_aad3d2 Int)
(assert (= Pu_aad3d2 0))
(declare-const Pd_aad3d2 Int)
(assert (= Pd_aad3d2 0))
(declare-const Pu_abd3d2 Int)
(assert (= Pu_abd3d2 0))
(declare-const Pd_abd3d2 Int)
(assert (= Pd_abd3d2 0))
(declare-const Pu_bad3d2 Int)
(assert (= Pu_bad3d2 1))
(declare-const Pd_bad3d2 Int)
(assert (= Pd_bad3d2 0))
(declare-const Pu_bbd3d2 Int)
(assert (= Pu_bbd3d2 0))
(declare-const Pd_bbd3d2 Int)
(assert (= Pd_bbd3d2 1))
(declare-const Pu_aad3d3 Int)
(assert (= Pu_aad3d3 0))
(declare-const Pd_aad3d3 Int)
(assert (= Pd_aad3d3 0))
(declare-const Pu_abd3d3 Int)
(assert (= Pu_abd3d3 0))
(declare-const Pd_abd3d3 Int)
(assert (= Pd_abd3d3 0))
(declare-const Pu_bad3d3 Int)
(assert (= Pu_bad3d3 1))
(declare-const Pd_bad3d3 Int)
(assert (= Pd_bad3d3 0))
(declare-const Pu_bbd3d3 Int)
(assert (= Pu_bbd3d3 0))
(declare-const Pd_bbd3d3 Int)
(assert (= Pd_bbd3d3 1))
(declare-const Pu_aad3d4 Int)
(assert (= Pu_aad3d4 0))
(declare-const Pd_aad3d4 Int)
(assert (= Pd_aad3d4 0))
(declare-const Pu_abd3d4 Int)
(assert (= Pu_abd3d4 0))
(declare-const Pd_abd3d4 Int)
(assert (= Pd_abd3d4 0))
(declare-const Pu_bad3d4 Int)
(assert (= Pu_bad3d4 0))
(declare-const Pd_bad3d4 Int)
(assert (= Pd_bad3d4 0))
(declare-const Pu_bbd3d4 Int)
(assert (= Pu_bbd3d4 1))
(declare-const Pd_bbd3d4 Int)
(assert (= Pd_bbd3d4 1))
(declare-const Pu_aad4d0 Int)
(assert (= Pu_aad4d0 0))
(declare-const Pd_aad4d0 Int)
(assert (= Pd_aad4d0 0))
(declare-const Pu_abd4d0 Int)
(assert (= Pu_abd4d0 0))
(declare-const Pd_abd4d0 Int)
(assert (= Pd_abd4d0 0))
(declare-const Pu_bad4d0 Int)
(assert (= Pu_bad4d0 1))
(declare-const Pd_bad4d0 Int)
(assert (= Pd_bad4d0 0))
(declare-const Pu_bbd4d0 Int)
(assert (= Pu_bbd4d0 0))
(declare-const Pd_bbd4d0 Int)
(assert (= Pd_bbd4d0 1))
(declare-const Pu_aad4d1 Int)
(assert (= Pu_aad4d1 0))
(declare-const Pd_aad4d1 Int)
(assert (= Pd_aad4d1 0))
(declare-const Pu_abd4d1 Int)
(assert (= Pu_abd4d1 0))
(declare-const Pd_abd4d1 Int)
(assert (= Pd_abd4d1 0))
(declare-const Pu_bad4d1 Int)
(assert (= Pu_bad4d1 0))
(declare-const Pd_bad4d1 Int)
(assert (= Pd_bad4d1 1))
(declare-const Pu_bbd4d1 Int)
(assert (= Pu_bbd4d1 1))
(declare-const Pd_bbd4d1 Int)
(assert (= Pd_bbd4d1 0))
(declare-const Pu_aad4d2 Int)
(assert (= Pu_aad4d2 0))
(declare-const Pd_aad4d2 Int)
(assert (= Pd_aad4d2 0))
(declare-const Pu_abd4d2 Int)
(assert (= Pu_abd4d2 0))
(declare-const Pd_abd4d2 Int)
(assert (= Pd_abd4d2 0))
(declare-const Pu_bad4d2 Int)
(assert (= Pu_bad4d2 1))
(declare-const Pd_bad4d2 Int)
(assert (= Pd_bad4d2 0))
(declare-const Pu_bbd4d2 Int)
(assert (= Pu_bbd4d2 0))
(declare-const Pd_bbd4d2 Int)
(assert (= Pd_bbd4d2 1))
(declare-const Pu_aad4d3 Int)
(assert (= Pu_aad4d3 0))
(declare-const Pd_aad4d3 Int)
(assert (= Pd_aad4d3 0))
(declare-const Pu_abd4d3 Int)
(assert (= Pu_abd4d3 0))
(declare-const Pd_abd4d3 Int)
(assert (= Pd_abd4d3 0))
(declare-const Pu_bad4d3 Int)
(assert (= Pu_bad4d3 1))
(declare-const Pd_bad4d3 Int)
(assert (= Pd_bad4d3 0))
(declare-const Pu_bbd4d3 Int)
(assert (= Pu_bbd4d3 0))
(declare-const Pd_bbd4d3 Int)
(assert (= Pd_bbd4d3 1))
(declare-const Pu_aad4d4 Int)
(assert (= Pu_aad4d4 0))
(declare-const Pd_aad4d4 Int)
(assert (= Pd_aad4d4 0))
(declare-const Pu_abd4d4 Int)
(assert (= Pu_abd4d4 0))
(declare-const Pd_abd4d4 Int)
(assert (= Pd_abd4d4 0))
(declare-const Pu_bad4d4 Int)
(assert (= Pu_bad4d4 0))
(declare-const Pd_bad4d4 Int)
(assert (= Pd_bad4d4 0))
(declare-const Pu_bbd4d4 Int)
(assert (= Pu_bbd4d4 1))
(declare-const Pd_bbd4d4 Int)
(assert (= Pd_bbd4d4 1))

(declare-const PPu_aad0d0 Int)
(assert (= PPu_aad0d0 1))
(declare-const PPd_aad0d0 Int)
(assert (= PPd_aad0d0 0))
(declare-const PPu_abd0d0 Int)
(assert (= PPu_abd0d0 0))
(declare-const PPd_abd0d0 Int)
(assert (= PPd_abd0d0 1))
(declare-const PPu_bad0d0 Int)
(assert (= PPu_bad0d0 0))
(declare-const PPd_bad0d0 Int)
(assert (= PPd_bad0d0 0))
(declare-const PPu_bbd0d0 Int)
(assert (= PPu_bbd0d0 0))
(declare-const PPd_bbd0d0 Int)
(assert (= PPd_bbd0d0 0))
(declare-const PPu_aad0d1 Int)
(assert (= PPu_aad0d1 0))
(declare-const PPd_aad0d1 Int)
(assert (= PPd_aad0d1 0))
(declare-const PPu_abd0d1 Int)
(assert (= PPu_abd0d1 0))
(declare-const PPd_abd0d1 Int)
(assert (= PPd_abd0d1 1))
(declare-const PPu_bad0d1 Int)
(assert (= PPu_bad0d1 1))
(declare-const PPd_bad0d1 Int)
(assert (= PPd_bad0d1 0))
(declare-const PPu_bbd0d1 Int)
(assert (= PPu_bbd0d1 0))
(declare-const PPd_bbd0d1 Int)
(assert (= PPd_bbd0d1 0))
(declare-const PPu_aad0d2 Int)
(assert (= PPu_aad0d2 1))
(declare-const PPd_aad0d2 Int)
(assert (= PPd_aad0d2 0))
(declare-const PPu_abd0d2 Int)
(assert (= PPu_abd0d2 0))
(declare-const PPd_abd0d2 Int)
(assert (= PPd_abd0d2 0))
(declare-const PPu_bad0d2 Int)
(assert (= PPu_bad0d2 0))
(declare-const PPd_bad0d2 Int)
(assert (= PPd_bad0d2 0))
(declare-const PPu_bbd0d2 Int)
(assert (= PPu_bbd0d2 0))
(declare-const PPd_bbd0d2 Int)
(assert (= PPd_bbd0d2 1))
(declare-const PPu_aad0d3 Int)
(assert (= PPu_aad0d3 0))
(declare-const PPd_aad0d3 Int)
(assert (= PPd_aad0d3 0))
(declare-const PPu_abd0d3 Int)
(assert (= PPu_abd0d3 0))
(declare-const PPd_abd0d3 Int)
(assert (= PPd_abd0d3 0))
(declare-const PPu_bad0d3 Int)
(assert (= PPu_bad0d3 1))
(declare-const PPd_bad0d3 Int)
(assert (= PPd_bad0d3 0))
(declare-const PPu_bbd0d3 Int)
(assert (= PPu_bbd0d3 0))
(declare-const PPd_bbd0d3 Int)
(assert (= PPd_bbd0d3 1))
(declare-const PPu_aad0d4 Int)
(assert (= PPu_aad0d4 0))
(declare-const PPd_aad0d4 Int)
(assert (= PPd_aad0d4 0))
(declare-const PPu_abd0d4 Int)
(assert (= PPu_abd0d4 0))
(declare-const PPd_abd0d4 Int)
(assert (= PPd_abd0d4 0))
(declare-const PPu_bad0d4 Int)
(assert (= PPu_bad0d4 1))
(declare-const PPd_bad0d4 Int)
(assert (= PPd_bad0d4 0))
(declare-const PPu_bbd0d4 Int)
(assert (= PPu_bbd0d4 0))
(declare-const PPd_bbd0d4 Int)
(assert (= PPd_bbd0d4 1))
(declare-const PPu_aad1d0 Int)
(assert (= PPu_aad1d0 0))
(declare-const PPd_aad1d0 Int)
(assert (= PPd_aad1d0 1))
(declare-const PPu_abd1d0 Int)
(assert (= PPu_abd1d0 1))
(declare-const PPd_abd1d0 Int)
(assert (= PPd_abd1d0 0))
(declare-const PPu_bad1d0 Int)
(assert (= PPu_bad1d0 0))
(declare-const PPd_bad1d0 Int)
(assert (= PPd_bad1d0 0))
(declare-const PPu_bbd1d0 Int)
(assert (= PPu_bbd1d0 0))
(declare-const PPd_bbd1d0 Int)
(assert (= PPd_bbd1d0 0))
(declare-const PPu_aad1d1 Int)
(assert (= PPu_aad1d1 0))
(declare-const PPd_aad1d1 Int)
(assert (= PPd_aad1d1 1))
(declare-const PPu_abd1d1 Int)
(assert (= PPu_abd1d1 0))
(declare-const PPd_abd1d1 Int)
(assert (= PPd_abd1d1 0))
(declare-const PPu_bad1d1 Int)
(assert (= PPu_bad1d1 0))
(declare-const PPd_bad1d1 Int)
(assert (= PPd_bad1d1 0))
(declare-const PPu_bbd1d1 Int)
(assert (= PPu_bbd1d1 1))
(declare-const PPd_bbd1d1 Int)
(assert (= PPd_bbd1d1 0))
(declare-const PPu_aad1d2 Int)
(assert (= PPu_aad1d2 0))
(declare-const PPd_aad1d2 Int)
(assert (= PPd_aad1d2 0))
(declare-const PPu_abd1d2 Int)
(assert (= PPu_abd1d2 1))
(declare-const PPd_abd1d2 Int)
(assert (= PPd_abd1d2 0))
(declare-const PPu_bad1d2 Int)
(assert (= PPu_bad1d2 0))
(declare-const PPd_bad1d2 Int)
(assert (= PPd_bad1d2 1))
(declare-const PPu_bbd1d2 Int)
(assert (= PPu_bbd1d2 0))
(declare-const PPd_bbd1d2 Int)
(assert (= PPd_bbd1d2 0))
(declare-const PPu_aad1d3 Int)
(assert (= PPu_aad1d3 0))
(declare-const PPd_aad1d3 Int)
(assert (= PPd_aad1d3 0))
(declare-const PPu_abd1d3 Int)
(assert (= PPu_abd1d3 0))
(declare-const PPd_abd1d3 Int)
(assert (= PPd_abd1d3 0))
(declare-const PPu_bad1d3 Int)
(assert (= PPu_bad1d3 0))
(declare-const PPd_bad1d3 Int)
(assert (= PPd_bad1d3 1))
(declare-const PPu_bbd1d3 Int)
(assert (= PPu_bbd1d3 1))
(declare-const PPd_bbd1d3 Int)
(assert (= PPd_bbd1d3 0))
(declare-const PPu_aad1d4 Int)
(assert (= PPu_aad1d4 0))
(declare-const PPd_aad1d4 Int)
(assert (= PPd_aad1d4 0))
(declare-const PPu_abd1d4 Int)
(assert (= PPu_abd1d4 0))
(declare-const PPd_abd1d4 Int)
(assert (= PPd_abd1d4 0))
(declare-const PPu_bad1d4 Int)
(assert (= PPu_bad1d4 0))
(declare-const PPd_bad1d4 Int)
(assert (= PPd_bad1d4 1))
(declare-const PPu_bbd1d4 Int)
(assert (= PPu_bbd1d4 1))
(declare-const PPd_bbd1d4 Int)
(assert (= PPd_bbd1d4 0))
(declare-const PPu_aad2d0 Int)
(assert (= PPu_aad2d0 1))
(declare-const PPd_aad2d0 Int)
(assert (= PPd_aad2d0 0))
(declare-const PPu_abd2d0 Int)
(assert (= PPu_abd2d0 0))
(declare-const PPd_abd2d0 Int)
(assert (= PPd_abd2d0 1))
(declare-const PPu_bad2d0 Int)
(assert (= PPu_bad2d0 0))
(declare-const PPd_bad2d0 Int)
(assert (= PPd_bad2d0 0))
(declare-const PPu_bbd2d0 Int)
(assert (= PPu_bbd2d0 0))
(declare-const PPd_bbd2d0 Int)
(assert (= PPd_bbd2d0 0))
(declare-const PPu_aad2d1 Int)
(assert (= PPu_aad2d1 0))
(declare-const PPd_aad2d1 Int)
(assert (= PPd_aad2d1 0))
(declare-const PPu_abd2d1 Int)
(assert (= PPu_abd2d1 0))
(declare-const PPd_abd2d1 Int)
(assert (= PPd_abd2d1 1))
(declare-const PPu_bad2d1 Int)
(assert (= PPu_bad2d1 1))
(declare-const PPd_bad2d1 Int)
(assert (= PPd_bad2d1 0))
(declare-const PPu_bbd2d1 Int)
(assert (= PPu_bbd2d1 0))
(declare-const PPd_bbd2d1 Int)
(assert (= PPd_bbd2d1 0))
(declare-const PPu_aad2d2 Int)
(assert (= PPu_aad2d2 1))
(declare-const PPd_aad2d2 Int)
(assert (= PPd_aad2d2 0))
(declare-const PPu_abd2d2 Int)
(assert (= PPu_abd2d2 0))
(declare-const PPd_abd2d2 Int)
(assert (= PPd_abd2d2 0))
(declare-const PPu_bad2d2 Int)
(assert (= PPu_bad2d2 0))
(declare-const PPd_bad2d2 Int)
(assert (= PPd_bad2d2 0))
(declare-const PPu_bbd2d2 Int)
(assert (= PPu_bbd2d2 0))
(declare-const PPd_bbd2d2 Int)
(assert (= PPd_bbd2d2 1))
(declare-const PPu_aad2d3 Int)
(assert (= PPu_aad2d3 0))
(declare-const PPd_aad2d3 Int)
(assert (= PPd_aad2d3 0))
(declare-const PPu_abd2d3 Int)
(assert (= PPu_abd2d3 0))
(declare-const PPd_abd2d3 Int)
(assert (= PPd_abd2d3 0))
(declare-const PPu_bad2d3 Int)
(assert (= PPu_bad2d3 1))
(declare-const PPd_bad2d3 Int)
(assert (= PPd_bad2d3 0))
(declare-const PPu_bbd2d3 Int)
(assert (= PPu_bbd2d3 0))
(declare-const PPd_bbd2d3 Int)
(assert (= PPd_bbd2d3 1))
(declare-const PPu_aad2d4 Int)
(assert (= PPu_aad2d4 0))
(declare-const PPd_aad2d4 Int)
(assert (= PPd_aad2d4 0))
(declare-const PPu_abd2d4 Int)
(assert (= PPu_abd2d4 0))
(declare-const PPd_abd2d4 Int)
(assert (= PPd_abd2d4 0))
(declare-const PPu_bad2d4 Int)
(assert (= PPu_bad2d4 1))
(declare-const PPd_bad2d4 Int)
(assert (= PPd_bad2d4 0))
(declare-const PPu_bbd2d4 Int)
(assert (= PPu_bbd2d4 0))
(declare-const PPd_bbd2d4 Int)
(assert (= PPd_bbd2d4 1))
(declare-const PPu_aad3d0 Int)
(assert (= PPu_aad3d0 1))
(declare-const PPd_aad3d0 Int)
(assert (= PPd_aad3d0 0))
(declare-const PPu_abd3d0 Int)
(assert (= PPu_abd3d0 0))
(declare-const PPd_abd3d0 Int)
(assert (= PPd_abd3d0 1))
(declare-const PPu_bad3d0 Int)
(assert (= PPu_bad3d0 0))
(declare-const PPd_bad3d0 Int)
(assert (= PPd_bad3d0 0))
(declare-const PPu_bbd3d0 Int)
(assert (= PPu_bbd3d0 0))
(declare-const PPd_bbd3d0 Int)
(assert (= PPd_bbd3d0 0))
(declare-const PPu_aad3d1 Int)
(assert (= PPu_aad3d1 0))
(declare-const PPd_aad3d1 Int)
(assert (= PPd_aad3d1 0))
(declare-const PPu_abd3d1 Int)
(assert (= PPu_abd3d1 0))
(declare-const PPd_abd3d1 Int)
(assert (= PPd_abd3d1 1))
(declare-const PPu_bad3d1 Int)
(assert (= PPu_bad3d1 1))
(declare-const PPd_bad3d1 Int)
(assert (= PPd_bad3d1 0))
(declare-const PPu_bbd3d1 Int)
(assert (= PPu_bbd3d1 0))
(declare-const PPd_bbd3d1 Int)
(assert (= PPd_bbd3d1 0))
(declare-const PPu_aad3d2 Int)
(assert (= PPu_aad3d2 1))
(declare-const PPd_aad3d2 Int)
(assert (= PPd_aad3d2 0))
(declare-const PPu_abd3d2 Int)
(assert (= PPu_abd3d2 0))
(declare-const PPd_abd3d2 Int)
(assert (= PPd_abd3d2 0))
(declare-const PPu_bad3d2 Int)
(assert (= PPu_bad3d2 0))
(declare-const PPd_bad3d2 Int)
(assert (= PPd_bad3d2 0))
(declare-const PPu_bbd3d2 Int)
(assert (= PPu_bbd3d2 0))
(declare-const PPd_bbd3d2 Int)
(assert (= PPd_bbd3d2 1))
(declare-const PPu_aad3d3 Int)
(assert (= PPu_aad3d3 0))
(declare-const PPd_aad3d3 Int)
(assert (= PPd_aad3d3 0))
(declare-const PPu_abd3d3 Int)
(assert (= PPu_abd3d3 0))
(declare-const PPd_abd3d3 Int)
(assert (= PPd_abd3d3 0))
(declare-const PPu_bad3d3 Int)
(assert (= PPu_bad3d3 1))
(declare-const PPd_bad3d3 Int)
(assert (= PPd_bad3d3 0))
(declare-const PPu_bbd3d3 Int)
(assert (= PPu_bbd3d3 0))
(declare-const PPd_bbd3d3 Int)
(assert (= PPd_bbd3d3 1))
(declare-const PPu_aad3d4 Int)
(assert (= PPu_aad3d4 0))
(declare-const PPd_aad3d4 Int)
(assert (= PPd_aad3d4 0))
(declare-const PPu_abd3d4 Int)
(assert (= PPu_abd3d4 0))
(declare-const PPd_abd3d4 Int)
(assert (= PPd_abd3d4 0))
(declare-const PPu_bad3d4 Int)
(assert (= PPu_bad3d4 1))
(declare-const PPd_bad3d4 Int)
(assert (= PPd_bad3d4 0))
(declare-const PPu_bbd3d4 Int)
(assert (= PPu_bbd3d4 0))
(declare-const PPd_bbd3d4 Int)
(assert (= PPd_bbd3d4 1))
(declare-const PPu_aad4d0 Int)
(assert (= PPu_aad4d0 0))
(declare-const PPd_aad4d0 Int)
(assert (= PPd_aad4d0 0))
(declare-const PPu_abd4d0 Int)
(assert (= PPu_abd4d0 1))
(declare-const PPd_abd4d0 Int)
(assert (= PPd_abd4d0 1))
(declare-const PPu_bad4d0 Int)
(assert (= PPu_bad4d0 0))
(declare-const PPd_bad4d0 Int)
(assert (= PPd_bad4d0 0))
(declare-const PPu_bbd4d0 Int)
(assert (= PPu_bbd4d0 0))
(declare-const PPd_bbd4d0 Int)
(assert (= PPd_bbd4d0 0))
(declare-const PPu_aad4d1 Int)
(assert (= PPu_aad4d1 0))
(declare-const PPd_aad4d1 Int)
(assert (= PPd_aad4d1 0))
(declare-const PPu_abd4d1 Int)
(assert (= PPu_abd4d1 0))
(declare-const PPd_abd4d1 Int)
(assert (= PPd_abd4d1 1))
(declare-const PPu_bad4d1 Int)
(assert (= PPu_bad4d1 0))
(declare-const PPd_bad4d1 Int)
(assert (= PPd_bad4d1 0))
(declare-const PPu_bbd4d1 Int)
(assert (= PPu_bbd4d1 1))
(declare-const PPd_bbd4d1 Int)
(assert (= PPd_bbd4d1 0))
(declare-const PPu_aad4d2 Int)
(assert (= PPu_aad4d2 0))
(declare-const PPd_aad4d2 Int)
(assert (= PPd_aad4d2 0))
(declare-const PPu_abd4d2 Int)
(assert (= PPu_abd4d2 1))
(declare-const PPd_abd4d2 Int)
(assert (= PPd_abd4d2 0))
(declare-const PPu_bad4d2 Int)
(assert (= PPu_bad4d2 0))
(declare-const PPd_bad4d2 Int)
(assert (= PPd_bad4d2 0))
(declare-const PPu_bbd4d2 Int)
(assert (= PPu_bbd4d2 0))
(declare-const PPd_bbd4d2 Int)
(assert (= PPd_bbd4d2 1))
(declare-const PPu_aad4d3 Int)
(assert (= PPu_aad4d3 0))
(declare-const PPd_aad4d3 Int)
(assert (= PPd_aad4d3 0))
(declare-const PPu_abd4d3 Int)
(assert (= PPu_abd4d3 0))
(declare-const PPd_abd4d3 Int)
(assert (= PPd_abd4d3 0))
(declare-const PPu_bad4d3 Int)
(assert (= PPu_bad4d3 0))
(declare-const PPd_bad4d3 Int)
(assert (= PPd_bad4d3 0))
(declare-const PPu_bbd4d3 Int)
(assert (= PPu_bbd4d3 1))
(declare-const PPd_bbd4d3 Int)
(assert (= PPd_bbd4d3 1))
(declare-const PPu_aad4d4 Int)
(assert (= PPu_aad4d4 0))
(declare-const PPd_aad4d4 Int)
(assert (= PPd_aad4d4 0))
(declare-const PPu_abd4d4 Int)
(assert (= PPu_abd4d4 0))
(declare-const PPd_abd4d4 Int)
(assert (= PPd_abd4d4 0))
(declare-const PPu_bad4d4 Int)
(assert (= PPu_bad4d4 0))
(declare-const PPd_bad4d4 Int)
(assert (= PPd_bad4d4 0))
(declare-const PPu_bbd4d4 Int)
(assert (= PPu_bbd4d4 1))
(declare-const PPd_bbd4d4 Int)
(assert (= PPd_bbd4d4 1))

(assert (= (+ (* Md0 Lu_ad0) (* Md1 Lu_ad1) (* Md2 Lu_ad2) (* Md3 Lu_ad3) (* Md4 Lu_ad4)) (+ (* Md0 Ld_ad0) (* Md1 Ld_ad1) (* Md2 Ld_ad2) (* Md3 Ld_ad3) (* Md4 Ld_ad4)) ))
(assert (= (+ (* Md0 Lu_bd0) (* Md1 Lu_bd1) (* Md2 Lu_bd2) (* Md3 Lu_bd3) (* Md4 Lu_bd4)) (+ (* Md0 Ld_bd0) (* Md1 Ld_bd1) (* Md2 Ld_bd2) (* Md3 Ld_bd3) (* Md4 Ld_bd4)) ))

(assert (= (+ (* Md0 Pu_aad0) (* Md0d0 Pu_aad0d0) (* Md0d1 Pu_aad0d1) (* Md0d2 Pu_aad0d2) (* Md0d3 Pu_aad0d3) (* Md0d4 Pu_aad0d4) (* Md1 Pu_aad1) (* Md1d0 Pu_aad1d0) (* Md1d1 Pu_aad1d1) (* Md1d2 Pu_aad1d2) (* Md1d3 Pu_aad1d3) (* Md1d4 Pu_aad1d4) (* Md2 Pu_aad2) (* Md2d0 Pu_aad2d0) (* Md2d1 Pu_aad2d1) (* Md2d2 Pu_aad2d2) (* Md2d3 Pu_aad2d3) (* Md2d4 Pu_aad2d4) (* Md3 Pu_aad3) (* Md3d0 Pu_aad3d0) (* Md3d1 Pu_aad3d1) (* Md3d2 Pu_aad3d2) (* Md3d3 Pu_aad3d3) (* Md3d4 Pu_aad3d4) (* Md4 Pu_aad4) (* Md4d0 Pu_aad4d0) (* Md4d1 Pu_aad4d1) (* Md4d2 Pu_aad4d2) (* Md4d3 Pu_aad4d3) (* Md4d4 Pu_aad4d4)) (+ (* Md0 Pd_aad0) (* Md0d0 Pd_aad0d0) (* Md0d1 Pd_aad0d1) (* Md0d2 Pd_aad0d2) (* Md0d3 Pd_aad0d3) (* Md0d4 Pd_aad0d4) (* Md1 Pd_aad1) (* Md1d0 Pd_aad1d0) (* Md1d1 Pd_aad1d1) (* Md1d2 Pd_aad1d2) (* Md1d3 Pd_aad1d3) (* Md1d4 Pd_aad1d4) (* Md2 Pd_aad2) (* Md2d0 Pd_aad2d0) (* Md2d1 Pd_aad2d1) (* Md2d2 Pd_aad2d2) (* Md2d3 Pd_aad2d3) (* Md2d4 Pd_aad2d4) (* Md3 Pd_aad3) (* Md3d0 Pd_aad3d0) (* Md3d1 Pd_aad3d1) (* Md3d2 Pd_aad3d2) (* Md3d3 Pd_aad3d3) (* Md3d4 Pd_aad3d4) (* Md4 Pd_aad4) (* Md4d0 Pd_aad4d0) (* Md4d1 Pd_aad4d1) (* Md4d2 Pd_aad4d2) (* Md4d3 Pd_aad4d3) (* Md4d4 Pd_aad4d4)) ))
(assert (= (+ (* Md0 Pu_abd0) (* Md0d0 Pu_abd0d0) (* Md0d1 Pu_abd0d1) (* Md0d2 Pu_abd0d2) (* Md0d3 Pu_abd0d3) (* Md0d4 Pu_abd0d4) (* Md1 Pu_abd1) (* Md1d0 Pu_abd1d0) (* Md1d1 Pu_abd1d1) (* Md1d2 Pu_abd1d2) (* Md1d3 Pu_abd1d3) (* Md1d4 Pu_abd1d4) (* Md2 Pu_abd2) (* Md2d0 Pu_abd2d0) (* Md2d1 Pu_abd2d1) (* Md2d2 Pu_abd2d2) (* Md2d3 Pu_abd2d3) (* Md2d4 Pu_abd2d4) (* Md3 Pu_abd3) (* Md3d0 Pu_abd3d0) (* Md3d1 Pu_abd3d1) (* Md3d2 Pu_abd3d2) (* Md3d3 Pu_abd3d3) (* Md3d4 Pu_abd3d4) (* Md4 Pu_abd4) (* Md4d0 Pu_abd4d0) (* Md4d1 Pu_abd4d1) (* Md4d2 Pu_abd4d2) (* Md4d3 Pu_abd4d3) (* Md4d4 Pu_abd4d4)) (+ (* Md0 Pd_abd0) (* Md0d0 Pd_abd0d0) (* Md0d1 Pd_abd0d1) (* Md0d2 Pd_abd0d2) (* Md0d3 Pd_abd0d3) (* Md0d4 Pd_abd0d4) (* Md1 Pd_abd1) (* Md1d0 Pd_abd1d0) (* Md1d1 Pd_abd1d1) (* Md1d2 Pd_abd1d2) (* Md1d3 Pd_abd1d3) (* Md1d4 Pd_abd1d4) (* Md2 Pd_abd2) (* Md2d0 Pd_abd2d0) (* Md2d1 Pd_abd2d1) (* Md2d2 Pd_abd2d2) (* Md2d3 Pd_abd2d3) (* Md2d4 Pd_abd2d4) (* Md3 Pd_abd3) (* Md3d0 Pd_abd3d0) (* Md3d1 Pd_abd3d1) (* Md3d2 Pd_abd3d2) (* Md3d3 Pd_abd3d3) (* Md3d4 Pd_abd3d4) (* Md4 Pd_abd4) (* Md4d0 Pd_abd4d0) (* Md4d1 Pd_abd4d1) (* Md4d2 Pd_abd4d2) (* Md4d3 Pd_abd4d3) (* Md4d4 Pd_abd4d4)) ))
(assert (= (+ (* Md0 Pu_bad0) (* Md0d0 Pu_bad0d0) (* Md0d1 Pu_bad0d1) (* Md0d2 Pu_bad0d2) (* Md0d3 Pu_bad0d3) (* Md0d4 Pu_bad0d4) (* Md1 Pu_bad1) (* Md1d0 Pu_bad1d0) (* Md1d1 Pu_bad1d1) (* Md1d2 Pu_bad1d2) (* Md1d3 Pu_bad1d3) (* Md1d4 Pu_bad1d4) (* Md2 Pu_bad2) (* Md2d0 Pu_bad2d0) (* Md2d1 Pu_bad2d1) (* Md2d2 Pu_bad2d2) (* Md2d3 Pu_bad2d3) (* Md2d4 Pu_bad2d4) (* Md3 Pu_bad3) (* Md3d0 Pu_bad3d0) (* Md3d1 Pu_bad3d1) (* Md3d2 Pu_bad3d2) (* Md3d3 Pu_bad3d3) (* Md3d4 Pu_bad3d4) (* Md4 Pu_bad4) (* Md4d0 Pu_bad4d0) (* Md4d1 Pu_bad4d1) (* Md4d2 Pu_bad4d2) (* Md4d3 Pu_bad4d3) (* Md4d4 Pu_bad4d4)) (+ (* Md0 Pd_bad0) (* Md0d0 Pd_bad0d0) (* Md0d1 Pd_bad0d1) (* Md0d2 Pd_bad0d2) (* Md0d3 Pd_bad0d3) (* Md0d4 Pd_bad0d4) (* Md1 Pd_bad1) (* Md1d0 Pd_bad1d0) (* Md1d1 Pd_bad1d1) (* Md1d2 Pd_bad1d2) (* Md1d3 Pd_bad1d3) (* Md1d4 Pd_bad1d4) (* Md2 Pd_bad2) (* Md2d0 Pd_bad2d0) (* Md2d1 Pd_bad2d1) (* Md2d2 Pd_bad2d2) (* Md2d3 Pd_bad2d3) (* Md2d4 Pd_bad2d4) (* Md3 Pd_bad3) (* Md3d0 Pd_bad3d0) (* Md3d1 Pd_bad3d1) (* Md3d2 Pd_bad3d2) (* Md3d3 Pd_bad3d3) (* Md3d4 Pd_bad3d4) (* Md4 Pd_bad4) (* Md4d0 Pd_bad4d0) (* Md4d1 Pd_bad4d1) (* Md4d2 Pd_bad4d2) (* Md4d3 Pd_bad4d3) (* Md4d4 Pd_bad4d4)) ))
(assert (= (+ (* Md0 Pu_bbd0) (* Md0d0 Pu_bbd0d0) (* Md0d1 Pu_bbd0d1) (* Md0d2 Pu_bbd0d2) (* Md0d3 Pu_bbd0d3) (* Md0d4 Pu_bbd0d4) (* Md1 Pu_bbd1) (* Md1d0 Pu_bbd1d0) (* Md1d1 Pu_bbd1d1) (* Md1d2 Pu_bbd1d2) (* Md1d3 Pu_bbd1d3) (* Md1d4 Pu_bbd1d4) (* Md2 Pu_bbd2) (* Md2d0 Pu_bbd2d0) (* Md2d1 Pu_bbd2d1) (* Md2d2 Pu_bbd2d2) (* Md2d3 Pu_bbd2d3) (* Md2d4 Pu_bbd2d4) (* Md3 Pu_bbd3) (* Md3d0 Pu_bbd3d0) (* Md3d1 Pu_bbd3d1) (* Md3d2 Pu_bbd3d2) (* Md3d3 Pu_bbd3d3) (* Md3d4 Pu_bbd3d4) (* Md4 Pu_bbd4) (* Md4d0 Pu_bbd4d0) (* Md4d1 Pu_bbd4d1) (* Md4d2 Pu_bbd4d2) (* Md4d3 Pu_bbd4d3) (* Md4d4 Pu_bbd4d4)) (+ (* Md0 Pd_bbd0) (* Md0d0 Pd_bbd0d0) (* Md0d1 Pd_bbd0d1) (* Md0d2 Pd_bbd0d2) (* Md0d3 Pd_bbd0d3) (* Md0d4 Pd_bbd0d4) (* Md1 Pd_bbd1) (* Md1d0 Pd_bbd1d0) (* Md1d1 Pd_bbd1d1) (* Md1d2 Pd_bbd1d2) (* Md1d3 Pd_bbd1d3) (* Md1d4 Pd_bbd1d4) (* Md2 Pd_bbd2) (* Md2d0 Pd_bbd2d0) (* Md2d1 Pd_bbd2d1) (* Md2d2 Pd_bbd2d2) (* Md2d3 Pd_bbd2d3) (* Md2d4 Pd_bbd2d4) (* Md3 Pd_bbd3) (* Md3d0 Pd_bbd3d0) (* Md3d1 Pd_bbd3d1) (* Md3d2 Pd_bbd3d2) (* Md3d3 Pd_bbd3d3) (* Md3d4 Pd_bbd3d4) (* Md4 Pd_bbd4) (* Md4d0 Pd_bbd4d0) (* Md4d1 Pd_bbd4d1) (* Md4d2 Pd_bbd4d2) (* Md4d3 Pd_bbd4d3) (* Md4d4 Pd_bbd4d4)) ))
(assert (= (+ (* Md0 Pu_aad0) (* MMd0d0 PPu_aad0d0) (* MMd0d1 PPu_aad0d1) (* MMd0d2 PPu_aad0d2) (* MMd0d3 PPu_aad0d3) (* MMd0d4 PPu_aad0d4) (* Md1 Pu_aad1) (* MMd1d0 PPu_aad1d0) (* MMd1d1 PPu_aad1d1) (* MMd1d2 PPu_aad1d2) (* MMd1d3 PPu_aad1d3) (* MMd1d4 PPu_aad1d4) (* Md2 Pu_aad2) (* MMd2d0 PPu_aad2d0) (* MMd2d1 PPu_aad2d1) (* MMd2d2 PPu_aad2d2) (* MMd2d3 PPu_aad2d3) (* MMd2d4 PPu_aad2d4) (* Md3 Pu_aad3) (* MMd3d0 PPu_aad3d0) (* MMd3d1 PPu_aad3d1) (* MMd3d2 PPu_aad3d2) (* MMd3d3 PPu_aad3d3) (* MMd3d4 PPu_aad3d4) (* Md4 Pu_aad4) (* MMd4d0 PPu_aad4d0) (* MMd4d1 PPu_aad4d1) (* MMd4d2 PPu_aad4d2) (* MMd4d3 PPu_aad4d3) (* MMd4d4 PPu_aad4d4)) (+ (* Md0 Pd_aad0) (* MMd0d0 PPd_aad0d0) (* MMd0d1 PPd_aad0d1) (* MMd0d2 PPd_aad0d2) (* MMd0d3 PPd_aad0d3) (* MMd0d4 PPd_aad0d4) (* Md1 Pd_aad1) (* MMd1d0 PPd_aad1d0) (* MMd1d1 PPd_aad1d1) (* MMd1d2 PPd_aad1d2) (* MMd1d3 PPd_aad1d3) (* MMd1d4 PPd_aad1d4) (* Md2 Pd_aad2) (* MMd2d0 PPd_aad2d0) (* MMd2d1 PPd_aad2d1) (* MMd2d2 PPd_aad2d2) (* MMd2d3 PPd_aad2d3) (* MMd2d4 PPd_aad2d4) (* Md3 Pd_aad3) (* MMd3d0 PPd_aad3d0) (* MMd3d1 PPd_aad3d1) (* MMd3d2 PPd_aad3d2) (* MMd3d3 PPd_aad3d3) (* MMd3d4 PPd_aad3d4) (* Md4 Pd_aad4) (* MMd4d0 PPd_aad4d0) (* MMd4d1 PPd_aad4d1) (* MMd4d2 PPd_aad4d2) (* MMd4d3 PPd_aad4d3) (* MMd4d4 PPd_aad4d4)) ))
(assert (= (+ (* Md0 Pu_abd0) (* MMd0d0 PPu_abd0d0) (* MMd0d1 PPu_abd0d1) (* MMd0d2 PPu_abd0d2) (* MMd0d3 PPu_abd0d3) (* MMd0d4 PPu_abd0d4) (* Md1 Pu_abd1) (* MMd1d0 PPu_abd1d0) (* MMd1d1 PPu_abd1d1) (* MMd1d2 PPu_abd1d2) (* MMd1d3 PPu_abd1d3) (* MMd1d4 PPu_abd1d4) (* Md2 Pu_abd2) (* MMd2d0 PPu_abd2d0) (* MMd2d1 PPu_abd2d1) (* MMd2d2 PPu_abd2d2) (* MMd2d3 PPu_abd2d3) (* MMd2d4 PPu_abd2d4) (* Md3 Pu_abd3) (* MMd3d0 PPu_abd3d0) (* MMd3d1 PPu_abd3d1) (* MMd3d2 PPu_abd3d2) (* MMd3d3 PPu_abd3d3) (* MMd3d4 PPu_abd3d4) (* Md4 Pu_abd4) (* MMd4d0 PPu_abd4d0) (* MMd4d1 PPu_abd4d1) (* MMd4d2 PPu_abd4d2) (* MMd4d3 PPu_abd4d3) (* MMd4d4 PPu_abd4d4)) (+ (* Md0 Pd_abd0) (* MMd0d0 PPd_abd0d0) (* MMd0d1 PPd_abd0d1) (* MMd0d2 PPd_abd0d2) (* MMd0d3 PPd_abd0d3) (* MMd0d4 PPd_abd0d4) (* Md1 Pd_abd1) (* MMd1d0 PPd_abd1d0) (* MMd1d1 PPd_abd1d1) (* MMd1d2 PPd_abd1d2) (* MMd1d3 PPd_abd1d3) (* MMd1d4 PPd_abd1d4) (* Md2 Pd_abd2) (* MMd2d0 PPd_abd2d0) (* MMd2d1 PPd_abd2d1) (* MMd2d2 PPd_abd2d2) (* MMd2d3 PPd_abd2d3) (* MMd2d4 PPd_abd2d4) (* Md3 Pd_abd3) (* MMd3d0 PPd_abd3d0) (* MMd3d1 PPd_abd3d1) (* MMd3d2 PPd_abd3d2) (* MMd3d3 PPd_abd3d3) (* MMd3d4 PPd_abd3d4) (* Md4 Pd_abd4) (* MMd4d0 PPd_abd4d0) (* MMd4d1 PPd_abd4d1) (* MMd4d2 PPd_abd4d2) (* MMd4d3 PPd_abd4d3) (* MMd4d4 PPd_abd4d4)) ))
(assert (= (+ (* Md0 Pu_bad0) (* MMd0d0 PPu_bad0d0) (* MMd0d1 PPu_bad0d1) (* MMd0d2 PPu_bad0d2) (* MMd0d3 PPu_bad0d3) (* MMd0d4 PPu_bad0d4) (* Md1 Pu_bad1) (* MMd1d0 PPu_bad1d0) (* MMd1d1 PPu_bad1d1) (* MMd1d2 PPu_bad1d2) (* MMd1d3 PPu_bad1d3) (* MMd1d4 PPu_bad1d4) (* Md2 Pu_bad2) (* MMd2d0 PPu_bad2d0) (* MMd2d1 PPu_bad2d1) (* MMd2d2 PPu_bad2d2) (* MMd2d3 PPu_bad2d3) (* MMd2d4 PPu_bad2d4) (* Md3 Pu_bad3) (* MMd3d0 PPu_bad3d0) (* MMd3d1 PPu_bad3d1) (* MMd3d2 PPu_bad3d2) (* MMd3d3 PPu_bad3d3) (* MMd3d4 PPu_bad3d4) (* Md4 Pu_bad4) (* MMd4d0 PPu_bad4d0) (* MMd4d1 PPu_bad4d1) (* MMd4d2 PPu_bad4d2) (* MMd4d3 PPu_bad4d3) (* MMd4d4 PPu_bad4d4)) (+ (* Md0 Pd_bad0) (* MMd0d0 PPd_bad0d0) (* MMd0d1 PPd_bad0d1) (* MMd0d2 PPd_bad0d2) (* MMd0d3 PPd_bad0d3) (* MMd0d4 PPd_bad0d4) (* Md1 Pd_bad1) (* MMd1d0 PPd_bad1d0) (* MMd1d1 PPd_bad1d1) (* MMd1d2 PPd_bad1d2) (* MMd1d3 PPd_bad1d3) (* MMd1d4 PPd_bad1d4) (* Md2 Pd_bad2) (* MMd2d0 PPd_bad2d0) (* MMd2d1 PPd_bad2d1) (* MMd2d2 PPd_bad2d2) (* MMd2d3 PPd_bad2d3) (* MMd2d4 PPd_bad2d4) (* Md3 Pd_bad3) (* MMd3d0 PPd_bad3d0) (* MMd3d1 PPd_bad3d1) (* MMd3d2 PPd_bad3d2) (* MMd3d3 PPd_bad3d3) (* MMd3d4 PPd_bad3d4) (* Md4 Pd_bad4) (* MMd4d0 PPd_bad4d0) (* MMd4d1 PPd_bad4d1) (* MMd4d2 PPd_bad4d2) (* MMd4d3 PPd_bad4d3) (* MMd4d4 PPd_bad4d4)) ))
(assert (= (+ (* Md0 Pu_bbd0) (* MMd0d0 PPu_bbd0d0) (* MMd0d1 PPu_bbd0d1) (* MMd0d2 PPu_bbd0d2) (* MMd0d3 PPu_bbd0d3) (* MMd0d4 PPu_bbd0d4) (* Md1 Pu_bbd1) (* MMd1d0 PPu_bbd1d0) (* MMd1d1 PPu_bbd1d1) (* MMd1d2 PPu_bbd1d2) (* MMd1d3 PPu_bbd1d3) (* MMd1d4 PPu_bbd1d4) (* Md2 Pu_bbd2) (* MMd2d0 PPu_bbd2d0) (* MMd2d1 PPu_bbd2d1) (* MMd2d2 PPu_bbd2d2) (* MMd2d3 PPu_bbd2d3) (* MMd2d4 PPu_bbd2d4) (* Md3 Pu_bbd3) (* MMd3d0 PPu_bbd3d0) (* MMd3d1 PPu_bbd3d1) (* MMd3d2 PPu_bbd3d2) (* MMd3d3 PPu_bbd3d3) (* MMd3d4 PPu_bbd3d4) (* Md4 Pu_bbd4) (* MMd4d0 PPu_bbd4d0) (* MMd4d1 PPu_bbd4d1) (* MMd4d2 PPu_bbd4d2) (* MMd4d3 PPu_bbd4d3) (* MMd4d4 PPu_bbd4d4)) (+ (* Md0 Pd_bbd0) (* MMd0d0 PPd_bbd0d0) (* MMd0d1 PPd_bbd0d1) (* MMd0d2 PPd_bbd0d2) (* MMd0d3 PPd_bbd0d3) (* MMd0d4 PPd_bbd0d4) (* Md1 Pd_bbd1) (* MMd1d0 PPd_bbd1d0) (* MMd1d1 PPd_bbd1d1) (* MMd1d2 PPd_bbd1d2) (* MMd1d3 PPd_bbd1d3) (* MMd1d4 PPd_bbd1d4) (* Md2 Pd_bbd2) (* MMd2d0 PPd_bbd2d0) (* MMd2d1 PPd_bbd2d1) (* MMd2d2 PPd_bbd2d2) (* MMd2d3 PPd_bbd2d3) (* MMd2d4 PPd_bbd2d4) (* Md3 Pd_bbd3) (* MMd3d0 PPd_bbd3d0) (* MMd3d1 PPd_bbd3d1) (* MMd3d2 PPd_bbd3d2) (* MMd3d3 PPd_bbd3d3) (* MMd3d4 PPd_bbd3d4) (* Md4 Pd_bbd4) (* MMd4d0 PPd_bbd4d0) (* MMd4d1 PPd_bbd4d1) (* MMd4d2 PPd_bbd4d2) (* MMd4d3 PPd_bbd4d3) (* MMd4d4 PPd_bbd4d4)) ))
(check-sat)
